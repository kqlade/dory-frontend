import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { TOKENS } from '../src/theme/tokens';

// Resolve __dirname in ES module context
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

function kebabCase(str: string): string {
  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
}

function objectToCssVars(obj: Record<string, string | number>, indent = '  '): string {
  return Object.entries(obj)
    .map(([key, value]) => `${indent}--${kebabCase(key)}: ${value};`)
    .join('\n');
}

// Build :root (light) and html.dark-mode sections
const rootVars: string[] = [];
const darkVars: string[] = [];

// Colours
rootVars.push(objectToCssVars(TOKENS.colors.light));
darkVars.push(objectToCssVars(TOKENS.colors.dark));

// after colours push, add explicit variables
rootVars.push(`  --dory-text: ${TOKENS.colors.light.doryText};`);
darkVars.push(`  --dory-text: ${TOKENS.colors.dark.doryText};`);
rootVars.push(`  --dory-text-light: ${TOKENS.colors.light.doryText};`);
rootVars.push(`  --dory-text-dark: ${TOKENS.colors.dark.doryText};`);
darkVars.push(`  --dory-text-light: ${TOKENS.colors.light.doryText};`);
darkVars.push(`  --dory-text-dark: ${TOKENS.colors.dark.doryText};`);

// Static tokens (spacing, radii, zIndex) – same across modes
rootVars.push(objectToCssVars(TOKENS.spacing));
rootVars.push(objectToCssVars(TOKENS.radii));
rootVars.push(objectToCssVars(TOKENS.zIndex));

// Legacy alias map for backwards compatibility
const legacyAlias: Record<string, string> = {
  'background-color': 'background',
  'text-color': 'text',
  'text-color-rgb': 'text-rgb',
  'text-secondary': 'textSecondary',
  'text-disabled': 'textDisabled',
  'border-color': 'border',
  'border-hover-color': 'borderHover',
  'border-focus-color': 'borderFocus',
  'shadow-color': 'shadow',
  'shadow-focus-color': 'shadowFocus',
  'dory-text-color': 'doryText',
};

function aliasVars(indent = '  ') {
  return Object.entries(legacyAlias)
    .map(([legacy, modern]) => `  --${legacy}: var(--${kebabCase(modern)});`)
    .join('\n');
}

rootVars.push(aliasVars());
darkVars.push(aliasVars());

const output = `/* AUTO‑GENERATED by scripts/generate-css-vars.ts – do not edit */\n\n:root {\n${rootVars.join('\n')}\n}\n\nhtml.dark-mode {\n${darkVars.join('\n')}\n}\n`;

const dest = path.resolve(__dirname, '../src/theme/variables.css');
fs.writeFileSync(dest, output, 'utf8');
console.log(`[tokens] Generated CSS variables at ${dest}`); 